{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Documents/react_projects/currency-exchange3/src/SelectCurrency.js\";\nimport React from \"react\";\n\nclass SelectCurrency extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sellInputValue: 1,\n      buyInputValue: null,\n      sellSelectValue: 'UAH',\n      buySelectValue: 'USD',\n      sellRate: 1,\n      buyRate: 0\n    };\n    this.sellSelectChange = this.sellSelectChange.bind(this);\n    this.buySelectChange = this.buySelectChange.bind(this);\n    this.inputChange = this.inputChange.bind(this);\n  }\n\n  async componentDidMount() {\n    this.props.currencies.push({\n      \"rate\": 1,\n      \"cc\": \"UAH\"\n    });\n    let rateUSD;\n    this.props.currencies.forEach(item => {\n      if (item.cc === \"USD\") {\n        rateUSD = item.rate;\n      }\n    });\n    this.setState({\n      buyInputValue: (1 / rateUSD).toFixed(2),\n      buyRate: rateUSD\n    });\n  }\n\n  sellSelectChange(event) {\n    let firstRate;\n    this.props.currencies.forEach(item => {\n      if (item.cc === event.target.value) {\n        firstRate = item.rate;\n      }\n    });\n    this.setState({\n      sellSelectValue: event.target.value,\n      sellRate: firstRate,\n      buyInputValue: (firstRate * this.state.sellInputValue / this.state.buyRate).toFixed(2)\n    });\n  }\n\n  buySelectChange(event) {\n    let rate;\n    this.props.currencies.forEach(item => {\n      if (item.cc === event.target.value) {\n        rate = item.rate;\n      }\n    });\n    this.setState({\n      buySelectValue: event.target.value,\n      buyRate: rate,\n      buyInputValue: (this.state.sellRate * this.state.sellInputValue / rate).toFixed(2)\n    });\n  }\n\n  inputChange(event) {\n    this.setState({\n      sellInputValue: event.target.value,\n      buyInputValue: (this.state.sellRate * event.target.value / this.state.buyRate).toFixed(2)\n    });\n  }\n\n  render() {\n    let currencyList = this.props.currencies;\n    return React.createElement(\"div\", {\n      className: \"currency_exchange\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Sell\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      min: \"1\",\n      value: this.state.sellInputValue,\n      className: \"soldCurrency\",\n      onChange: this.inputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      value: this.state.sellSelectValue,\n      onChange: this.sellSelectChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, currencyList.map((elem, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        value: elem.cc,\n        rate: elem.rate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, elem.cc);\n    })))), React.createElement(\"button\", {\n      onClick: \"this.changeCurrencies\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"change\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Buy\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"number\",\n      value: this.state.buyInputValue,\n      disabled: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      value: this.state.buySelectValue,\n      onChange: this.buySelectChange,\n      rate: this.state.buyInputValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, currencyList.map((elem, index) => {\n      return React.createElement(\"option\", {\n        key: index,\n        value: elem.cc,\n        rate: elem.rate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, elem.cc);\n    })))));\n  }\n\n}\n\nexport default SelectCurrency;","map":{"version":3,"sources":["/Users/aleksandra/Documents/react_projects/currency-exchange3/src/SelectCurrency.js"],"names":["React","SelectCurrency","Component","constructor","props","state","sellInputValue","buyInputValue","sellSelectValue","buySelectValue","sellRate","buyRate","sellSelectChange","bind","buySelectChange","inputChange","componentDidMount","currencies","push","rateUSD","forEach","item","cc","rate","setState","toFixed","event","firstRate","target","value","render","currencyList","map","elem","index"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nclass  SelectCurrency extends React.Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        sellInputValue: 1,\n        buyInputValue: null,\n        sellSelectValue: 'UAH',\n        buySelectValue: 'USD',\n        sellRate: 1,\n        buyRate: 0 \n      }\n      this.sellSelectChange = this.sellSelectChange.bind(this);\n      this.buySelectChange = this.buySelectChange.bind(this);\n      this.inputChange = this.inputChange.bind(this);\n    }\n\n    async componentDidMount() {\n      this.props.currencies.push({\"rate\": 1, \"cc\": \"UAH\"});\n      let rateUSD;\n      this.props.currencies.forEach(item => {\n          if(item.cc === \"USD\") {\n              rateUSD = item.rate;\n          }\n      });\n      this.setState({ \n          buyInputValue: (1 / rateUSD).toFixed(2), \n          buyRate: rateUSD \n        });\n    }\n\n    sellSelectChange(event) {\n        let firstRate;\n        this.props.currencies.forEach(item => {\n            if(item.cc === event.target.value) {\n                firstRate = item.rate;\n            }\n        });\n      this.setState({\n        sellSelectValue: event.target.value, \n        sellRate: firstRate, \n        buyInputValue: (firstRate * this.state.sellInputValue / this.state.buyRate).toFixed(2)\n    });\n    }\n\n    \n\n    buySelectChange(event) {\n      let rate;\n      this.props.currencies.forEach(item => {\n          if(item.cc === event.target.value) {\n              rate = item.rate;\n          }\n      });\n    this.setState(\n        {\n          buySelectValue: event.target.value,\n          buyRate: rate,\n          buyInputValue: (this.state.sellRate * this.state.sellInputValue / rate).toFixed(2)\n      });   \n  }\n\n  inputChange(event) {\n      this.setState({\n        sellInputValue: event.target.value,\n        buyInputValue: (this.state.sellRate * event.target.value / this.state.buyRate).toFixed(2)\n      });\n  }\n\n    render() {\n        let currencyList = this.props.currencies;\n      \n        return (\n          <div className=\"currency_exchange\">\n          <div>\n              <span>Sell</span>\n              <div>\n              <input \n                  type=\"number\" \n                  min=\"1\"\n                  value={this.state.sellInputValue} \n                  className=\"soldCurrency\"\n                  onChange={this.inputChange}\n                  />\n              <select value={this.state.sellSelectValue} onChange={this.sellSelectChange}>\n                  {\n                      currencyList.map((elem, index)=>{\n                      return (<option key={index} value={elem.cc} rate={elem.rate}>\n                          {elem.cc}\n                      </option>)\n                      })\n                  }\n              </select>\n              </div> \n          </div>\n          <button onClick=\"this.changeCurrencies\">change</button>\n          <div>\n              <span>Buy</span>\n              <div>\n              <input \n                  type=\"number\"\n                  value={this.state.buyInputValue}\n                  disabled={true}\n              />\n              <select value={this.state.buySelectValue} onChange={this.buySelectChange} rate={this.state.buyInputValue}>\n                  {\n                      currencyList.map((elem, index)=>{\n                      return (<option key={index} value={elem.cc} rate={elem.rate}>\n                          {elem.cc}\n                      </option>)\n                      })\n                  }\n              </select>\n              </div>\n          </div>\n      </div>\n        );\n    }\n}\n\nexport default SelectCurrency;"]},"metadata":{},"sourceType":"module"}