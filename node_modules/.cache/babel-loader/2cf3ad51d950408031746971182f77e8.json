{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandra/Documents/react_projects/currency-exchange3/src/App.js\";\nimport React from 'react';\nimport SelectRate from './SelectRate.js';\nimport SelectCurrency from './SelectCurrency.js';\nimport CurrentDate from './CurrentDate.js';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      currencies: null\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      currencies: data,\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"loading...\");\n    }\n\n    if (!this.state.currencies) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"didn't get a currency\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(CurrentDate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(SelectCurrency, {\n      currencies: this.state.currencies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(SelectRate, {\n      currencies: this.state.currencies,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aleksandra/Documents/react_projects/currency-exchange3/src/App.js"],"names":["React","SelectRate","SelectCurrency","CurrentDate","App","Component","constructor","state","loading","currencies","componentDidMount","url","response","fetch","data","json","setState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,UAAU,EAAE;AAFD,KAAb;AAID;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAMC,GAAG,GAAG,mEAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;AACA,UAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEA,SAAKC,QAAL,CAAc;AAAEP,MAAAA,UAAU,EAAEK,IAAd;AAAoBN,MAAAA,OAAO,EAAE;AAA7B,KAAd;AACH;;AAEDS,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKV,KAAL,CAAWC,OAAf,EAAwB;AACpB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,QAAI,CAAC,KAAKD,KAAL,CAAWE,UAAhB,EAA4B;AAC1B,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD;;AAEH,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAE,KAAKF,KAAL,CAAWE,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAUD;;AApCiC;;AAwClC,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport SelectRate from './SelectRate.js';\nimport SelectCurrency from './SelectCurrency.js';\nimport CurrentDate from './CurrentDate.js';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      currencies: null\n    };\n  }\n\n  async componentDidMount() {\n    const url = \"https://bank.gov.ua/NBUStatService/v1/statdirectory/exchange?json\";\n    const response = await fetch(url);\n    const data = await response.json();\n    \n    this.setState({ currencies: data, loading: false});\n}\n\nrender() {\n  if (this.state.loading) {\n      return <div>loading...</div>;\n    }\n\n    if (!this.state.currencies) {\n      return <div>didn't get a currency</div>;\n    }\n\n  return (\n      <div>\n          <CurrentDate />\n          <SelectCurrency currencies={this.state.currencies} />\n          <SelectRate currencies={this.state.currencies} />\n          <div>\n      </div>\n  </div>\n      \n  )\n}\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}